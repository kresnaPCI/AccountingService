# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    odoo.accounts:
        gogosg:
            prefix: gogosg
            account_id: 7
            timezone: '+8'
            product_id: 3
        gogoth:
            prefix: gogoth
            account_id: 7
            timezone: '+7'
            product_id: 3

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # OdooClient
    service.library.odoo_account_data_factory:
        class: App\AccountingPlatform\Library\Odoo\OdooAccountDataFactory
        arguments:
         - '%odoo.accounts%'

    service.library.odoo_client:
        class: App\AccountingPlatform\Library\Odoo\OdooClient
        arguments:
          - '%env(ODOO_HOST)%'
          - '%env(ODOO_DB)%'
          - '%env(ODOO_USER)%'
          - '%env(ODOO_PASS)%'

    service.library.odoo_repository:
        class: App\AccountingPlatform\Library\Odoo\OdooRepository
        arguments:
          - '@service.library.odoo_client'

    # Accounting Adapters
    accounting.adapter.creditmemo.odoo:
        class: App\AccountingPlatform\CreditMemo\OdooAdapter
        arguments:
          - '@service.library.odoo_client'
          - '@service.library.odoo_repository'
          - '@service.library.odoo_account_data_factory'

    accounting.adapter.invoice.odoo:
        class: App\AccountingPlatform\Invoice\OdooAdapter
        arguments:
          - '@service.library.odoo_client'
          - '@service.library.odoo_repository'
          - '@service.library.odoo_account_data_factory'

    accounting.service.creditmemo:
        class: App\AccountingPlatform\CreditMemoService
        arguments:
          - '@accounting.adapter.creditmemo.odoo'
        public: true

    accounting.service.invoice:
        class: App\AccountingPlatform\InvoiceService
        arguments:
          - '@accounting.adapter.invoice.odoo'
        public: true

    queue.processor.invoice_create:
        class: App\Queue\Processor\CreateInvoiceProcessor
        arguments:
         - '@accounting.service.invoice'
         - '@App\Transformer\InvoiceTransformer'
        tags:
        - { name: 'enqueue.client.processor'}
        public: true

    queue.processor.invoice_pay:
        class: App\Queue\Processor\PayInvoiceProcessor
        arguments:
        - '@accounting.service.invoice'
        tags:
        - { name: 'enqueue.client.processor'}
        public: true

    queue.processor.invoice_update_date:
        class: App\Queue\Processor\UpdateInvoiceDateProcessor
        arguments:
        - '@accounting.service.invoice'
        tags:
        - { name: 'enqueue.client.processor'}
        public: true

    queue.processor.invoice_update_status:
        class: App\Queue\Processor\UpdateInvoiceStatusProcessor
        arguments:
        - '@accounting.service.invoice'
        tags:
        - { name: 'enqueue.client.processor'}
        public: true
